% small noweb example
This is a small literate program to illustrate how literate programming differs 
from \enquote{illiterate} programming.
<<module docstring>>=
This is a module for computing Fibonacci sequences.
@

Its computer-readable source is named [[fib.py]] and has the standard Python 
format.
<<fib.py>>=
"""
<<module docstring>>
"""

<<module functions>>

def tests():
  """
  Run some tests to verify that the Fibonacci function works.
  """
  <<test code>>

if __name__ == "__main__":
  tests()
@

We only provide one function in this simple example.
<<module functions>>=
def fib(n):
  """
  Compute the Fibonacci number of n.
  """
  <<check [[n]] for the base case>>
  return fib(n-1) + fib(n-2)
@

We see that for \(n\) we must have already computed the Fibonacci numbers for 
\(n-1\) and \(n-2\).
This gives our base case:
<<check [[n]] for the base case>>=
if n < 0:
  raise ValueError("n must be non-negative")
elif n == 0:
  return 0
elif n == 1:
  return 1
@

Now we can test run the function to see that it works properly.
<<test code>>=
for i in range(5):
  print(f"{fib(i)=}")
